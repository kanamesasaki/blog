{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/20220516-typescript-setup/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"40463e8a-73bf-5318-8e35-b72ddf414399","excerpt":"今回は，TypeScriptで簡単なWebアプリ（Three.jsを使って3Dグラフィクス表示する）を作成してGithub Pagesにデプロイする際の手順についてまとめておきます． プロジェクトのセットアップ まずはプロジェクトをinitsしてTypeScriptをインストール． tsc —init…","html":"<p>今回は，TypeScriptで簡単なWebアプリ（Three.jsを使って3Dグラフィクス表示する）を作成してGithub Pagesにデプロイする際の手順についてまとめておきます．</p>\n<h2>プロジェクトのセットアップ</h2>\n<p>まずはプロジェクトをinitsしてTypeScriptをインストール．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> init\r\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev typescript</code></pre></div>\n<p>tsc —initするとtsconfig.jsonファイルが作成される．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">npx tsc -v\r\nnpx tsc --init</code></pre></div>\n<p>いくつかtsconfig.jsonの設定を書き換えておこう．</p>\n<ul>\n<li>今回はWebアプリ的なものを作りたいので，HTMLの要素を扱うためにdom (Document Object Model)をlibに追加</li>\n<li>アウトプットディレクトリは./distにしておく</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es2016\"</span><span class=\"token punctuation\">,</span>\r\n\t\t<span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n\t\t<span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span>\r\n\t\t<span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dist\"</span><span class=\"token punctuation\">,</span>\r\n\t\t<span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n\t\t<span class=\"token property\">\"forceConsistentCasingInFileNames\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n\t\t<span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n\t\t<span class=\"token property\">\"skipLibCheck\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>TypeScriptをコンパイルして最終的にデプロイするのに必要なパッケージをインストールする．\r\nwebpack-dev-serverは必須ではないが，ローカルサーバーをたてて作成したアプリの動作確認をするのに便利なので入れておく．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev webpack webpack-cli ts-loader webpack-dev-server</code></pre></div>\n<p>今回は，例として3Dグラフィクス表示するアプリを作ってみよう．\r\nそこでThree.jsおよびその型定義をインストールする．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> three @types/three</code></pre></div>\n<p>追加でコードテストするためのライブラリをインストールする．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev jest ts-jest @types/jest</code></pre></div>\n<p>package.jsonを以下のように書き変えて，コードテストとページビルドに関するコマンドを追加する．</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack serve --mode=development --open\"</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>以下のようなwebpack.config.jsファイルを作成して，webpackに関する設定を行う．</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// webpack starts bundling here</span>\r\n    entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        bundle<span class=\"token operator\">:</span> <span class=\"token string\">'./src/main.ts'</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>  \r\n    output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// the target directory for all output files</span>\r\n        path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span><span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n        filename<span class=\"token operator\">:</span> <span class=\"token string\">'[name].js'</span>  <span class=\"token comment\">// [name] is defined at entry (bundle in this case)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// extensions that are recognized as modules</span>\r\n        extensions<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'.ts'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// file location for webpack-dev-server</span>\r\n        <span class=\"token keyword\">static</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n            directory<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n\t      <span class=\"token comment\">// rules for modules (configure loaders, parser options, etc.)</span>\r\n        rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                <span class=\"token comment\">// use TypeScript compiler for .ts files</span>\r\n                test<span class=\"token operator\">:</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.ts$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>loader<span class=\"token operator\">:</span><span class=\"token string\">'ts-loader'</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>以下のコマンドでjest.configファイルを作成する．\r\njest.configファイルをTypeScriptにすると，ts-nodeが追加で必要になるので，JavaScriptを指定する．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">npx jest --init\r\n\r\n√ Would you like to use Typescript <span class=\"token keyword\">for</span> the configuration file? <span class=\"token punctuation\">..</span>. no\r\n√ Choose the <span class=\"token builtin class-name\">test</span> environment that will be used <span class=\"token keyword\">for</span> testing » node\r\n√ Do you want Jest to <span class=\"token function\">add</span> coverage reports? <span class=\"token punctuation\">..</span>. <span class=\"token function\">yes</span>\r\n√ Which provider should be used to instrument code <span class=\"token keyword\">for</span> coverage? » v8\r\n√ Automatically <span class=\"token function\">clear</span> mock calls, instances and results before every test? <span class=\"token punctuation\">..</span>. no</code></pre></div>\n<p>jest.config.jsに以下のスクリプトを追加する．</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token comment\">// The glob patterns Jest uses to detect test files</span>\r\n  testMatch<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">\"**/__tests__/**/*.[jt]s?(x)\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"**/?(*.)+(spec|test).[tj]s?(x)\"</span>\r\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token comment\">// A map from regular expressions to paths to transformers</span>\r\n  transform<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"^.+\\\\.(ts|tsx)$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ts-jest\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>.gitignoreにdist/bundle.jsを記入して，mainブランチにはコンパイルされたJavaScriptコードは置かないようにしておく．</p>\n<h2>コンパイルとデプロイ</h2>\n<p>準備が整ったので，簡単なHTMLとTypeScriptのスクリプトを書いて，実際にブラウザ上で動かしてみよう．\r\nまず，以下のようなindex.htmlを作成してdistディレクトリに置く．</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Three.js on TypeScript<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\r\n\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>WebGL-output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./bundle.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>TypeScriptのファイル名はwebpack.config.jsで指定したように，main.tsとしておこう．\r\nこちらはsrcディレクトリに置く．</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">THREE</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"three\"</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">let</span> scene <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">Scene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\t<span class=\"token keyword\">let</span> camera <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">PerspectiveCamera</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">/</span> window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\r\n\t\r\n\t<span class=\"token keyword\">let</span> renderer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">WebGL1Renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\trenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setClearColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xEEEEEE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\trenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">)</span>\r\n\r\n\t<span class=\"token keyword\">let</span> axes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">AxesHelper</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\r\n\tscene<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>axes<span class=\"token punctuation\">)</span>\r\n\r\n\t<span class=\"token comment\">// create the ground plane</span>\r\n\t<span class=\"token keyword\">let</span> planeGeometry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">PlaneGeometry</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\r\n\t<span class=\"token keyword\">let</span> planeMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">MeshBasicMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>color<span class=\"token operator\">:</span> <span class=\"token number\">0xcccccc</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n\t<span class=\"token keyword\">let</span> plane <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">Mesh</span><span class=\"token punctuation\">(</span>planeGeometry<span class=\"token punctuation\">,</span> planeMaterial<span class=\"token punctuation\">)</span>\r\n\tplane<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span>\r\n\tplane<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">15.0</span>\r\n\tplane<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span>\r\n\tplane<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span>\r\n\tscene<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>plane<span class=\"token punctuation\">)</span>\r\n\r\n\t<span class=\"token comment\">// create a sphere</span>\r\n\t<span class=\"token keyword\">let</span> sphereGeometry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">SphereGeometry</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">let</span> sphereMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">MeshBasicMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>color<span class=\"token operator\">:</span> <span class=\"token number\">0x7777ff</span><span class=\"token punctuation\">,</span> wireframe<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">let</span> sphere <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">THREE</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">Mesh</span><span class=\"token punctuation\">(</span>sphereGeometry<span class=\"token punctuation\">,</span> sphereMaterial<span class=\"token punctuation\">)</span>\r\n\tsphere<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">20.0</span>\r\n\tsphere<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">4.0</span>\r\n\tsphere<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span>\r\n\tscene<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">)</span>\r\n\r\n\tcamera<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">30.0</span>\r\n\tcamera<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">40.0</span>\r\n\tcamera<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token number\">30.0</span>\r\n    camera<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span>\r\n\r\n\t<span class=\"token comment\">// add the output of the renderer to the html element</span>\r\n\t<span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WebGL-output\"</span><span class=\"token punctuation\">)</span>\r\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\telement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">.</span>domElement<span class=\"token punctuation\">)</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\t\r\n\t<span class=\"token comment\">// render the scene</span>\r\n\trenderer<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">,</span> camera<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\nwindow<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> init</code></pre></div>\n<p>以下のコマンドで，TypeScriptをコンパイルできる．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> run build</code></pre></div>\n<p>以下のコマンドでは，webpack-dev-serverを用いて，ローカルサーバーにデプロイしてブラウザ上で動作確認ができる．問題なければ，ブラウザが立ち上がって，グレーの板の上にワイヤフレームの球が表示されるはずだ．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> run start</code></pre></div>\n<p>Jestテストは以下のコマンドで実行できる．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span></code></pre></div>\n<p>Github Pagesにデプロイする際には，gh-pagesパッケージを用いる．\r\n今回はdistフォルダ内をデプロイしたいので，以下のコマンドを打つ．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">gh-pages -d dist</code></pre></div>","frontmatter":{"title":"TypeScriptでWebアプリを作ってGithub Pagesにデプロイする","date":"May 16, 2022","description":"Deploy TypeScript app on Github Pages"}},"previous":{"fields":{"slug":"/20220414-instanceof/"},"frontmatter":{"title":"TypeScriptのジェネリクスでinstanceof Tしたい"}},"next":null},"pageContext":{"id":"40463e8a-73bf-5318-8e35-b72ddf414399","previousPostId":"bc1c6240-b5de-5636-9179-964827d0323e","nextPostId":null}},
    "staticQueryHashes": ["2841359383","3257411868"]}